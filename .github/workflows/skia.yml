name: Main
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  watch:
    types: [started]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-v8:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v4
      with:
          root-reserve-mb: 1024   
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Echo Free space
      run: |
          echo "Free space:"
          df -h
    - name: Set up Python 2.x
      uses: actions/setup-python@v2
      with:
        python-version: '2.x'
    - name: Prepare
      run: |
        sudo apt remove php7.4-common libpci3 -y
        sudo apt-get install bzip2  
    - name: Get Resource
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH="$PATH:$PWD/depot_tools"
        mkdir v8
        cd v8
        fetch v8
        cd v8
        git checkout 9.1.269.17
        ls -la
        ls build/
        cd ../
        echo "target_os = ['android']" >> .gclient
        gclient sync -D --force --reset
        echo y | sudo /home/runner/work/v8-android/v8-android/v8/v8/build/install-build-deps-android.sh
        ls -la
        cat .gclient
    - name: Build V8
      run: |
        export PATH="$PATH:$PWD/depot_tools"
        ls -la 
        pwd
        cd /home/runner/work/v8-android/v8-android/v8/v8
        ls -la
        python /home/runner/work/v8-android/v8-android/v8/v8/tools/dev/v8gen.py arm64.release -vv -- '
        target_os = "android"
        target_cpu = "arm64"
        v8_target_cpu = "arm64"
        is_component_build = false
        android_unstripped_runtime_outputs = false
        v8_use_external_startup_data = false
        v8_static_library = true
        use_custom_libcxx=false
        v8_monolithic = true
        v8_enable_i18n_support = false
        v8_android_log_stdout = true
        symbol_level = 0
        '
        ninja -C out.gn/arm64.release -t clean
        ninja -C out.gn/arm64.release v8_libplatform
        ninja -C out.gn/arm64.release v8
    - name: pack v8
      run: |
        cd /home/runner/work/v8-android/v8-android/v8/v8
        ls
        tar -cjf v8-android-static.tar.bz2 out.gn/ include/
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Test with environment variables
      run: echo $TAG_NAME - $RELEASE_TIME
      env:
          TAG_NAME: v8android-static
          RELEASE_TIME: ${{ steps.date.outputs.date }}
    - name: Release v8 
      uses: ncipollo/release-action@v1
      with:
        artifacts: "/home/runner/work/v8-android/v8-android/v8/v8/v8-android-static.tar.bz2"
        tag: v8android-static${{ steps.date.outputs.date }}
        token: ${{ secrets.RELEASE_TOKEN }}
       

