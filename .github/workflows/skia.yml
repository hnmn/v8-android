name: Main
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  watch:
    types: [started]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-v8:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v4
      with:
          root-reserve-mb: 512   
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Echo Free space
      run: |
          
          sudo apt purge -yq $(dpkg -l | grep '^ii' | awk '{ print $2 }' | grep -P '(cabal-|dotnet-|ghc-|libmono|php)') \
          liblldb-6.0 libllvm6.0:amd64 mono-runtime-common monodoc-manual powershell ruby
          sudo rm -rf /opt/az /usr/local /usr/share/dotnet
          sudo apt autoremove -yq
          echo "Free space:"
          df -h
    - name: Set up Python 2.x
      uses: actions/setup-python@v2
      with:
        python-version: '2.x'
    - name: Prepare
      run: |
        sudo apt-get install bzip2 libexpat-dev
    - name: Get Resource
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH="$PATH:$PWD/depot_tools"
        mkdir skia
        cd skia
        fetch skia
        cd skia
        python2 tools/git-sync-deps
        ls -la
        tools/install_dependencies.sh
        curl https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip -o ndk.zip
        unzip ndk.zip -d /tmp/ndk
        ls -la
        rm ndk.zip
    - name: Build Skia
      run: |
        export PATH="$PATH:$PWD/depot_tools"
        ls -la 
        cd /home/runner/work/v8-android/v8-android/skia/skia
        ls -la
        bin/gn gen out/arm64 --args='ndk="/tmp/ndk/android-ndk-r21d" extra_ldflags=["-lexpat"] extra_cflags=["-I/usr/include"] target_cpu="arm64" is_official_build=true'
        ninja -C out/arm64 -j 2 -v
    - name: pack skia
      run: |
        cd /home/runner/work/v8-android/v8-android/skia/skia
        ls
        tar -cjf skia-android.tar.bz2 out/ include/
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Test with environment variables
      run: echo $TAG_NAME - $RELEASE_TIME
      env:
          TAG_NAME: android
          RELEASE_TIME: ${{ steps.date.outputs.date }}
    - name: Release 
      uses: ncipollo/release-action@v1
      with:
        artifacts: "/home/runner/work/v8-android/v8-android/skia/skia/skia-android.tar.bz2"
        tag: android${{ steps.date.outputs.date }}
        token: ${{ secrets.RELEASE_TOKEN }}
       

